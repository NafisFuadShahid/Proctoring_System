{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fuadn/Desktop/ML/big%20project/proc/frontend/app/api/verify/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const formData = await request.formData();\r\n    const file = formData.get('file');\r\n\r\n    if (!file) {\r\n      return NextResponse.json(\r\n        { error: 'No file provided' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Create new FormData for the Python backend\r\n    const pythonFormData = new FormData();\r\n    pythonFormData.append('file', file);\r\n\r\n    const response = await fetch('http://localhost:8000/api/verify', {\r\n      method: 'POST',\r\n      body: pythonFormData,\r\n    });\r\n\r\n    const data = await response.json();\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error('Verification error:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error processing request' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,WAAW,MAAM,QAAQ,QAAQ;QACvC,MAAM,OAAO,SAAS,GAAG,CAAC;QAE1B,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAmB,GAC5B;gBAAE,QAAQ;YAAI;QAElB;QAEA,6CAA6C;QAC7C,MAAM,iBAAiB,IAAI;QAC3B,eAAe,MAAM,CAAC,QAAQ;QAE9B,MAAM,WAAW,MAAM,MAAM,oCAAoC;YAC/D,QAAQ;YACR,MAAM;QACR;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}